class Pt(x: Int, y: Int) {
    this.x = x;
    this.y = y;

    def string() : String { 
        return "(" + this.x.string() + ", " + this.y.string() + ")";
    }

    def getX() : Int {
        return this.x;
    }

    def getY() : Int {
        return this.y;
    }
}

class Shape() {
    this.area = 0;

    def string() : String {
        return "An arbitrary 2D shape";
    }

    def contains(pt: Pt) : Boolean {
        return false; 
    }

    def area() : Int {
        return this.area;
    }
}

class Circle(center: Pt, r: Int) extends Shape {
    this.center = center;
    this.radius = r;
    this.area = r * r;

    def string() : String {
        return "A radius " + this.radius.string() + " circle centered at " + this.center.string();
    }
    
    def contains(pt: Pt) : Boolean {
        dx = pt.getX() - this.center.getX();
        dy = pt.getY() - this.center.getY();
        return dx * dx + dy * dy < this.radius * this.radius;
    }
}

class Rectangle(ul: Pt, lr: Pt) extends Shape {
    this.ul = ul;
    this.lr = lr;

    dx = ul.getX() - lr.getX();
    dy = ul.getY() - lr.getY();
    this.area = dx * dy;

    def string() : String {
        return "A rectangle with upperleft " + this.ul.string() + " and lowerright " + this.lr.string();
    }

    def contains(pt: Pt) : Boolean {
        return pt.getX() >= this.ul.getX() and pt.getX() <= this.lr.getX() and
            pt.getY() <= this.ul.getY() and pt.getY() >= this.lr.getY();
    }
}

class GridCenteredSquare(center: Pt, radius: Int) extends Rectangle {
    this.ul = Pt(center.getX() - radius, center.getY() - radius);
    this.lr = Pt(center.getX() + radius, center.getY() + radius);
    this.area = 4 * radius * radius;

    /*
    def contains(pt: Pt) : Boolean {
        return false;
    }
    */
}

pt = Pt(1, 1);
circ = Circle(Pt(0, 0), 1);
rect = Rectangle(Pt(-1, 1), Pt(1, -1));
sqr  = GridCenteredSquare(Pt(0, 0), 1);

pt.print();
"\n".print();
circ.print();
"\n".print();
rect.print();
"\n".print();
sqr.print();
"\n".print();

circ.contains(pt).print();
rect.contains(pt).print();
sqr.contains(pt).print();
